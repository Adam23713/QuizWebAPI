@model Models.Response.Quiz.GetQuizForGameResponse

@{
    ViewData["Title"] = "Quiz";
}

<h2>@Model.Name</h2>

<div id="quizContainer">
    @for (int i = 0; i < Model.Questions.Count; i++)
    {
        <div class="question-container" style="display: @(i == 0 ? "block" : "none")">
            <h3>Question @(i + 1)</h3>
            <p class="question-text">@Model.Questions[i].QuestionText</p>

            <h4>Answers</h4>
            <form class="quizForm">
                @foreach (var answer in Model.Questions[i].Answers)
                {
                    <button type="button" class="btn-answer" data-answer-id="@answer.Id">@answer.AnswerText</button>
                }
            </form>
        </div>
    }

    <!-- Result Section -->
    <div id="resultSection" style="display: none;">
        <h3>Quiz Result</h3>
        <p id="resultContainer"></p>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            var currentQuestionIndex = 0;
            var quiz; // Declare the quiz variable outside of any function scope

            function showQuestion(questionIndex) {
                var quizContainer = $("#quizContainer");
                var questions = quizContainer.find(".question-container");

                if (questionIndex < questions.length) {
                    questions.hide();
                    questions.eq(questionIndex).show();
                } else {
                    // Show the result section if the question index is out of bounds
                    showResultSection();
                }
            }

            function hideQuestion(questionIndex) {
                var quizContainer = $("#quizContainer");
                quizContainer.find(".question-container").eq(questionIndex).hide();
            }

            function getNextQuestion(currentQuestionIndex) {
                return quiz.questions[currentQuestionIndex + 1];
            }

            function showResultSection() {
                $("#resultSection").show();
            }

            function showQuizResult(quiz) {
                var quizId = quiz.id;
                var userId = @Model.UserId; // Replace with the actual user ID

                $.ajax({
                    url: `https://localhost:7094/game/result/${quizId}?userId=${userId}`,
                    type: "GET",
                    contentType: "application/json",
                    headers: {
                        "X-API-Version": "1.0",
                        "Content-Type": "application/json"
                    },
                    success: function (result) {
                        $("#resultContainer").text(result);
                        showResultSection();
                    },
                    error: function (error) {
                        console.error(error);
                    }
                });
            }

            $(document).on("click", ".btn-answer", function () {
                quiz = @Html.Raw(Json.Serialize(Model));

                var selectedAnswerId = $(this).data("answer-id");

                quiz.questions[currentQuestionIndex].selectedAnswerId = selectedAnswerId;

                var userAnswer = {
                    userId: @Model.UserId,
                    quizId: quiz.id,
                    questionId: quiz.questions[currentQuestionIndex].id,
                    answersList: [selectedAnswerId]
                };

                $.ajax({
                    url: "https://localhost:7094/game/submit",
                    type: "POST",
                    contentType: "application/json",
                    data: JSON.stringify(userAnswer),
                    headers: {
                        "X-API-Version": "1.0",
                        "Content-Type": "application/json"
                    },
                    success: function (response) {
                        var nextQuestion = getNextQuestion(currentQuestionIndex);

                        if (nextQuestion) {
                            hideQuestion(currentQuestionIndex);
                            currentQuestionIndex++;
                            showQuestion(currentQuestionIndex);
                        } else {
                            // End of quiz - fetch and show result
                            hideQuestion(currentQuestionIndex);
                            showQuizResult(quiz);
                        }
                    },
                    error: function (error) {
                        console.error(error);
                    }
                });
            });
        });
    </script>
}
